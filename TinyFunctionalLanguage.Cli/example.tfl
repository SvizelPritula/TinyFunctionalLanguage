struct List {
    first: int;
    rest: List;
}

func empty(): List {
    null List
}

func add(list: List, value: int): List {
    List(value, list)
}

struct ExtractResult {
    value: int;
    rest: List;
}

func extract_max(list: List): ExtractResult {
    if list.rest == empty() {
        ExtractResult(list.first, empty())
    } else {
        let result = extract_max(list.rest);

        if list.first > result.value {
            ExtractResult(list.first, list.rest)
        } else {
            ExtractResult(result.value, add(result.rest, list.first))
        }
    }
}

func sort(list: List): List {
    let sorted = empty();

    while list != empty() {
        let result = extract_max(list);
        list = result.rest;
        sorted = add(sorted, result.value);
    };

    sorted
}

func concat(list: List, separator: string): string {
    let str = "";

    while list != empty() {
        if str != "" {
            str = str + separator;
        };

        str = str + list.first;
        list = list.rest;
    };

    str
}

func main(): string {
    let list = empty();

    list = add(list, 3);
    list = add(list, 18);
    list = add(list, 1);
    list = add(list, 14);
    list = add(list, 15);
    list = add(list, 4);
    list = add(list, 20);
    list = add(list, 7);

    let sorted = sort(list);

    concat(list, ", ") + " -> " + concat(sorted, ", ")
}
